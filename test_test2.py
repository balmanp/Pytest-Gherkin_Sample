# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC

@pytest.mark.usefixtures("setup_and_teardown")
class TestTets():
  @pytest.fixture(autouse=True)
  def setup_and_teardown(self):
    # Setup
    self.driver = webdriver.Chrome()
    self.driver.maximize_window()
    self.wait = WebDriverWait(self.driver, 10)
    
    yield  # Ini akan menjalankan test
    
    # Teardown
    self.driver.quit()
  
  def test_login(self):
    self.driver.get("https://www.saucedemo.com/v1/index.html")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"username\"]").send_keys("standard_user")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"password\"]").send_keys("secret_sauce")
    self.driver.find_element(By.ID, "login-button").click()
    
    # Verifikasi login berhasil
    assert "inventory" in self.driver.current_url
  
  def test_add_to_cart(self):
    # Login dulu
    self.test_login()
    
    # Tambah ke cart
    self.driver.find_element(By.CSS_SELECTOR, ".inventory_item:nth-child(1) .btn_primary").click()
    
    # Verifikasi item ditambahkan
    cart_badge = self.driver.find_element(By.CSS_SELECTOR, ".shopping_cart_badge")
    assert cart_badge.text == "1"
  
  def test_checkout(self):
    # Login dan tambah item ke cart
    self.test_add_to_cart()
    
    # Proses checkout
    self.driver.find_element(By.CSS_SELECTOR, ".shopping_cart_link").click()
    self.driver.find_element(By.CSS_SELECTOR, ".checkout_button").click()
    
    # Isi form checkout
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"firstName\"]").send_keys("selenium")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"lastName\"]").send_keys("test")
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"postalCode\"]").send_keys("12345")
    self.driver.find_element(By.CSS_SELECTOR, ".cart_button").click()
    
    # Finish checkout
    self.driver.find_element(By.CSS_SELECTOR, ".cart_button").click()
    
    # Verifikasi checkout berhasil
    success_message = self.wait.until(
        EC.presence_of_element_located((By.CSS_SELECTOR, ".complete-header"))
    )
    assert "THANK YOU" in success_message.text
  
  def test_logout(self):
    # Login dulu
    self.test_login()
    
    # Logout
    self.driver.find_element(By.CSS_SELECTOR, ".bm-burger-button > button").click()
    logout_link = self.wait.until(
        EC.element_to_be_clickable((By.ID, "logout_sidebar_link"))
    )
    logout_link.click()
    
    # Verifikasi logout berhasil
    assert "index.html" in self.driver.current_url
  
